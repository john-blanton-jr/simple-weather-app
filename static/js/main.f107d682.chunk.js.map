{"version":3,"sources":["components/Search.js","components/Display.js","components/hooks/useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["api","Search","handleSearch","useState","searchInput","setSearchInput","className","type","placeholder","value","onChange","e","target","onKeyPress","val","key","process","Display","searchUrl","setFetchUrl","url","data","setData","isPending","setIsPending","error","setError","useEffect","controller","AbortController","fetchData","a","fetch","signal","res","ok","Error","statusText","json","name","console","log","abort","useFetch","src","weather","icon","alt","sys","country","description","Math","round","main","temp","feels_like","temp_max","temp_min","wind","speed","humidity","App","currentTime","Date","getHours","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f107d682.chunk.js","sourcesContent":["import { useState } from 'react'\n\n// styles\nimport './Search.css'\n\n// hooks\n// import fetchUrl from '../hooks/useFetch'\n\nconst api = {\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nexport default function Search({handleSearch}) {\n  const [searchInput, setSearchInput] = useState('')\n\n  const handleKeyPress = (val) =>{\n    if (val.key === \"Enter\") {\n      handleSearch(`${api.base}weather?q=${searchInput}&units=imperial&APPID=${process.env.REACT_APP_OPENWEATHER_API_KEY}`)\n      setSearchInput('')\n    }\n  }\n\n  return (\n    <div className=\"search-box\">\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search...\"\n        value={searchInput}\n        onChange={e => setSearchInput(e.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n    </div>\n  )\n}\n","// styles\nimport { useState } from 'react'\nimport './Display.css'\n\n// hooks\nimport { useFetch } from './hooks/useFetch'\n\n// components\nimport Search from './Search'\n\nexport default function Display() {\n  const [searchUrl, setFetchUrl] = useState(`https://api.openweathermap.org/data/2.5/weather?q=denver&units=imperial&APPID=${process.env.REACT_APP_OPENWEATHER_API_KEY}`)\n\n  const { data, isPending, error} = useFetch(searchUrl)\n  \n  const handleSearch = (url) => {\n    setFetchUrl(url)\n  }\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n          {error && <p className=\"error\">{error}</p>}\n          {isPending && <p className=\"loading\">Loading...</p>}\n          {data && \n        <div className=\"display\">\n          <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt=\"\" />\n          <h2>{data.name}, {data.sys.country}</h2>\n          <h3>{data.weather[0].description}</h3>\n          <h1 className=\"temp\">{Math.round(data.main.temp)}째f</h1>\n          <h3>Feels like: {Math.round(data.main.feels_like)}째f</h3>\n          <div className=\"high-low\">\n            <h2>High: {Math.round(data.main.temp_max)}째f</h2>\n            <h2>Low: {Math.round(data.main.temp_min)}째f</h2>\n          </div>\n          <h2 className=\"wind-speed\">Wind Speed: {Math.round(data.wind.speed)} mph</h2>\n          <h2>Humidity: {data.main.humidity}%</h2>\n        </div>}\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\"\n\nexport const useFetch = (url) => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async () => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    fetchData()\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url])\n\n  return { data, isPending, error }\n}","// styles\nimport './App.css';\nimport Display from './components/Display';\n\n// components\n// import Search from './components/Search';\nfunction App() {\n  let currentTime = new Date().getHours();\n  \n \n\n  return (\n    <div className={(7 <= currentTime && currentTime < 20)  ? 'app bg' : 'app bg night'}>\n        <main>\n          <Display />\n          \n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}